services:
  db:
    image: docker.io/library/postgres:17-alpine
    restart: always
    volumes:
      - db:/var/lib/postgresql/data:z
    env_file:
      - db.env

  redis:
    image: valkey/valkey:alpine
    restart: always

  app:
    image: docker.io/library/nextcloud:fpm-alpine
    restart: always
    depends_on:
      - redis
      - db
      - smtp
    volumes:
      - nextcloud:/var/www/html:z
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - TRUSTED_PROXIES=${NEXTCLOUD_TRUSTED_PROXIES}
      - SMTP_HOST=smtp
      - SMTP_PORT=2525
    env_file:
      - db.env
      - s3.env

  collabora:
    image: collabora/code
    restart: always
    environment:
      - domain=docs.grd0.net
      - server_name=docs.grd0.net
      - dictionaries=en,zh

  caddy:
    image: caddy:alpine
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - nextcloud:/var/www/html:z,ro
      - ./Caddyfile:/etc/caddy/Caddyfile
    volumes_from:
      - app

  cron:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud:/var/www/html:z
      # NOTE: The `volumes` config of the `cron` and `app` containers must match
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  tunnel:
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_EDGE_IP_VERSION=auto
    env_file:
      - cloudflared.env
  
  smtp:
    image: kostyaesmukov/smtp_to_telegram
    restart: always
    environment:
      - "Subject: {subject}\\n\\n{body}\\n\\n{attachments_details}"
    env_file:
      - smtp.env

volumes:
  nextcloud:
  db:

networks:
  default:
    enable_ipv6: true