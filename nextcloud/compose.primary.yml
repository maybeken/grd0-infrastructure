services:
  db:
    image: docker.io/library/postgres:17-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data:z
    env_file:
      - db.env

  redis:
    image: docker.io/library/redis:alpine
    restart: always
    ports:
      - 6379:6379

  web:
    image: docker.io/library/nginx
    restart: always
    ports:
      - 8443:443
    depends_on:
      - self-sign
    volumes:
      - nextcloud:/var/www/html:z,ro
      - certs:/etc/ssl/certs:z,ro
      - ./web/nginx.conf:/etc/nginx/nginx.conf:z,ro

  self-sign:
    image: paulczar/omgwtfssl
    restart: "no"
    volumes:
      - certs:/certs
    environment:
      - SSL_SUBJECT=nextcloud.local
      - CA_SUBJECT=admin@grd0.net
      - SSL_KEY=/certs/nextcloud.local.key
      - SSL_CSR=/certs/nextcloud.local.csr
      - SSL_CERT=/certs/nextcloud.local.crt

  tunnel:
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_EDGE_IP_VERSION=auto
    env_file:
      - cloudflared.env

  nfs:
    image: erichough/nfs-server
    privileged: true
    restart: always
    ports:
      - 2049:2049
    volumes:
      - nextcloud:/var/www/html:z
    environment:
      - NFS_EXPORT_0=/var/www/html ${CLUSTER_HOST_SUBNET}(rw,no_subtree_check,anonuid=82,anongid=82,fsid=0)
      - NFS_DISABLE_VERSION_3=1

  cron:
    image: nextcloud:fpm-alpine
    restart: always
    volumes:
      - nextcloud:/var/www/html:z
      # NOTE: The `volumes` config of the `cron` and `app` containers must match
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis
      - nfs
      - proxy

volumes:
  nextcloud:
  db:
  certs:

networks:
  default:
    enable_ipv6: true